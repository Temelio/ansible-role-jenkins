---

# Common tests between local Vagrant and Travis

- name : Jenkins repository key should exists
  become : True
  apt_key :
    url : "{{ jenkins_repository_key_url }}"
  register : jenkins_apt_key_test
  when :
    - ansible_os_family == "Debian"

- name : Fail if Jenkins repository key reimport change
  fail :
    msg : "Key import task change if we import twice"
  when :
    - ansible_os_family == "Debian"
    - jenkins_apt_key_test.changed

- name : Jenkins json file version for update center
  become  : True
  command : >
    sed -n '0,/RE/s/.*war\/\(.*\)\/jenkins.war.*/\1/p'
    {{ jenkins_update_file }}
  register : jenkins_update_json_file_version_test
  changed_when : False

- name : Jenkins war version
  command  : "java -jar {{ jenkins_etc_war_location }} --version"
  register : jenkins_war_version_test
  changed_when : False

- name : Fail if Jenkins update json file too old
  fail :
    msg : "Jenkins update file too old"
  when : >
    {{ jenkins_update_json_file_version_test.stdout
    | version_compare(jenkins_war_version_test.stdout_lines[2], '<') }}

- name : Jenkins homepage should return 200
  register : jenkins_homepage_test
  uri :
    url : "{{ jenkins_base_url }}"
    status_code : 200
    return_content : True

- name : Check homepage not contains error
  fail :
    msg : Jenkins not return expected homepage
  when : "'Welcome to Jenkins!' not in jenkins_homepage_test.content"

- name : Get installed plugins
  become      : True
  become_user : "{{ jenkins_etc_user }}"
  register    : jenkins_list_plugins_test
  shell : >
    java
    -jar {{ jenkins_cli }}
    -s {{ jenkins_base_url }}
    list-plugins
    | awk '{ print $1 }'
  changed_when : False

- name : Check if needed plugins installed
  fail :
    msg : >
      Some needed plugins not installed :
      {{
        (jenkins_plugins | map(attribute='name'))
        | difference(jenkins_list_plugins_test.stdout_lines)
      }}
  when :
    - "{{
        (jenkins_plugins | map(attribute='name'))
        | difference(jenkins_list_plugins_test.stdout_lines)
      }}"

- name : Get plugins should be upgraded
  become      : True
  become_user : "{{ jenkins_etc_user }}"
  register    : jenkins_list_plugins_with_upgrade_test
  shell : >
    java
    -jar {{ jenkins_cli }}
    -s {{ jenkins_base_url }}
    list-plugins
    | grep ')$'
    | awk '{ print $1 }'
  changed_when : False

- name : Check if some plugins should be upgraded
  fail :
    msg : >
      Some needed plugins should be upgraded :
      {{ jenkins_list_plugins_with_upgrade_test.stdout_lines }}
  when : jenkins_list_plugins_with_upgrade_test.stdout_lines

